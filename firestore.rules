rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: user can read/write own profile
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Presence: user can read all basic presence; write own presence only
    match /presence/{userId} {
      allow read: if request.auth != null; // presence is lightweight status
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Conversations: readable/writable by participants only
    match /conversations/{conversationId} {
      allow read, write: if isParticipant(conversationId);

      // Messages subcollection
      match /messages/{messageId} {
        allow read, write: if isParticipant(conversationId);
      }
    }

    function isParticipant(conversationId) {
      return request.auth != null &&
             exists(/databases/$(database)/documents/conversations/$(conversationId)) &&
             request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
    }
  }
}